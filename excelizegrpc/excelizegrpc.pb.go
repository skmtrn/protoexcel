// Code generated by protoc-gen-go. DO NOT EDIT.
// source: excelizegrpc.proto

package excelizegrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestEntry struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Lp                   string   `protobuf:"bytes,2,opt,name=lp,proto3" json:"lp,omitempty"`
	Value                float32  `protobuf:"fixed32,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestEntry) Reset()         { *m = TestEntry{} }
func (m *TestEntry) String() string { return proto.CompactTextString(m) }
func (*TestEntry) ProtoMessage()    {}
func (*TestEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcbad43e53961bd3, []int{0}
}

func (m *TestEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestEntry.Unmarshal(m, b)
}
func (m *TestEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestEntry.Marshal(b, m, deterministic)
}
func (m *TestEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestEntry.Merge(m, src)
}
func (m *TestEntry) XXX_Size() int {
	return xxx_messageInfo_TestEntry.Size(m)
}
func (m *TestEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_TestEntry.DiscardUnknown(m)
}

var xxx_messageInfo_TestEntry proto.InternalMessageInfo

func (m *TestEntry) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TestEntry) GetLp() string {
	if m != nil {
		return m.Lp
	}
	return ""
}

func (m *TestEntry) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Response struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcbad43e53961bd3, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type Entries struct {
	Entries              []*TestEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Entries) Reset()         { *m = Entries{} }
func (m *Entries) String() string { return proto.CompactTextString(m) }
func (*Entries) ProtoMessage()    {}
func (*Entries) Descriptor() ([]byte, []int) {
	return fileDescriptor_dcbad43e53961bd3, []int{2}
}

func (m *Entries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entries.Unmarshal(m, b)
}
func (m *Entries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entries.Marshal(b, m, deterministic)
}
func (m *Entries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entries.Merge(m, src)
}
func (m *Entries) XXX_Size() int {
	return xxx_messageInfo_Entries.Size(m)
}
func (m *Entries) XXX_DiscardUnknown() {
	xxx_messageInfo_Entries.DiscardUnknown(m)
}

var xxx_messageInfo_Entries proto.InternalMessageInfo

func (m *Entries) GetEntries() []*TestEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func init() {
	proto.RegisterType((*TestEntry)(nil), "excelizegrpc.TestEntry")
	proto.RegisterType((*Response)(nil), "excelizegrpc.Response")
	proto.RegisterType((*Entries)(nil), "excelizegrpc.Entries")
}

func init() { proto.RegisterFile("excelizegrpc.proto", fileDescriptor_dcbad43e53961bd3) }

var fileDescriptor_dcbad43e53961bd3 = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xcd, 0x4a, 0xc5, 0x30,
	0x14, 0x84, 0x4d, 0x2e, 0xd7, 0x7b, 0x7b, 0x94, 0x0a, 0xc1, 0x9f, 0xd0, 0x55, 0xc8, 0x42, 0xb2,
	0x2a, 0x58, 0xb7, 0x6e, 0xba, 0xe8, 0x5e, 0x62, 0x5f, 0x40, 0xdb, 0x83, 0x04, 0x42, 0x13, 0x92,
	0x5a, 0xd4, 0xa7, 0x97, 0xfe, 0x62, 0x77, 0x33, 0xc3, 0x30, 0xe7, 0xe3, 0x00, 0xc3, 0xef, 0x06,
	0xad, 0xf9, 0xc5, 0xcf, 0xe0, 0x9b, 0xdc, 0x07, 0xd7, 0x3b, 0x76, 0xfd, 0x3f, 0x93, 0x25, 0x24,
	0x35, 0xc6, 0xbe, 0xea, 0xfa, 0xf0, 0xc3, 0x52, 0xa0, 0xa6, 0xe5, 0x44, 0x10, 0x75, 0xd4, 0xd4,
	0xb4, 0xa3, 0xb7, 0x9e, 0x53, 0x41, 0x54, 0xa2, 0xa9, 0xf5, 0xec, 0x16, 0x8e, 0xc3, 0xbb, 0xfd,
	0x42, 0x7e, 0x10, 0x44, 0x51, 0x3d, 0x1b, 0xf9, 0x08, 0x67, 0x8d, 0xd1, 0xbb, 0x2e, 0x22, 0xcb,
	0xe0, 0x1c, 0x16, 0x3d, 0xed, 0x24, 0x7a, 0xf3, 0xf2, 0x05, 0x4e, 0xe3, 0x19, 0x83, 0x91, 0x3d,
	0xc1, 0x09, 0x67, 0xc9, 0x89, 0x38, 0xa8, 0xab, 0xe2, 0x21, 0xdf, 0x91, 0x6e, 0x48, 0x7a, 0xed,
	0x15, 0x35, 0xdc, 0x54, 0x4b, 0xe5, 0x0d, 0xc3, 0x60, 0x1a, 0x64, 0x25, 0xa4, 0xaf, 0xc1, 0x0d,
	0xa6, 0xc5, 0x75, 0xf7, 0x6e, 0x3f, 0xb3, 0xc4, 0xd9, 0xfd, 0x3e, 0x5e, 0x69, 0xe5, 0xc5, 0xc7,
	0xe5, 0xf4, 0x93, 0xe7, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x5e, 0xed, 0xb0, 0x29, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExcelizeServiceClient is the client API for ExcelizeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExcelizeServiceClient interface {
	ProvideEntries(ctx context.Context, in *Entries, opts ...grpc.CallOption) (*Response, error)
}

type excelizeServiceClient struct {
	cc *grpc.ClientConn
}

func NewExcelizeServiceClient(cc *grpc.ClientConn) ExcelizeServiceClient {
	return &excelizeServiceClient{cc}
}

func (c *excelizeServiceClient) ProvideEntries(ctx context.Context, in *Entries, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/excelizegrpc.ExcelizeService/ProvideEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExcelizeServiceServer is the server API for ExcelizeService service.
type ExcelizeServiceServer interface {
	ProvideEntries(context.Context, *Entries) (*Response, error)
}

// UnimplementedExcelizeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedExcelizeServiceServer struct {
}

func (*UnimplementedExcelizeServiceServer) ProvideEntries(ctx context.Context, req *Entries) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProvideEntries not implemented")
}

func RegisterExcelizeServiceServer(s *grpc.Server, srv ExcelizeServiceServer) {
	s.RegisterService(&_ExcelizeService_serviceDesc, srv)
}

func _ExcelizeService_ProvideEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Entries)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExcelizeServiceServer).ProvideEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/excelizegrpc.ExcelizeService/ProvideEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExcelizeServiceServer).ProvideEntries(ctx, req.(*Entries))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExcelizeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "excelizegrpc.ExcelizeService",
	HandlerType: (*ExcelizeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProvideEntries",
			Handler:    _ExcelizeService_ProvideEntries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "excelizegrpc.proto",
}
